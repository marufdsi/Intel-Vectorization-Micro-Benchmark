








Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.


    Report from: Interprocedural optimizations [ipo]

  WHOLE PROGRAM (SAFE) [EITHER METHOD]: false
  WHOLE PROGRAM (SEEN) [TABLE METHOD]: true
  WHOLE PROGRAM (READ) [OBJECT READER METHOD]: false

INLINING OPTION VALUES:
  -inline-factor: 100
  -inline-min-size: 30
  -inline-max-size: 230
  -inline-max-total-size: 2000
  -inline-max-per-routine: 10000
  -inline-max-per-compile: 500000

In the inlining report below:
   "sz" refers to the "size" of the routine. The smaller a routine's size,
      the more likely it is to be inlined.
   "isz" refers to the "inlined size" of the routine. This is the amount
      the calling routine will grow if the called routine is inlined into it.
      The compiler generally limits the amount a routine can grow by having
      routines inlined into it.

Begin optimization report for: main()

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (main()) [1/3=33.3%] TestVector.cpp(31,11)

===========================================================================

Begin optimization report for: foo2(float *, int, int, int)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (foo2(float *, int, int, int)) [2/3=66.7%] TestVector.cpp(16,85)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at TestVector.cpp(22,3)
   remark #15388: vectorization support: reference X has aligned access   [ TestVector.cpp(23,5) ]
   remark #15388: vectorization support: reference X has aligned access   [ TestVector.cpp(23,5) ]
   remark #15389: vectorization support: reference a has unaligned access   [ TestVector.cpp(23,5) ]
   remark #15389: vectorization support: reference a has unaligned access   [ TestVector.cpp(23,5) ]
   remark #15389: vectorization support: reference a has unaligned access   [ TestVector.cpp(23,5) ]
   remark #15389: vectorization support: reference a has unaligned access   [ TestVector.cpp(23,5) ]
   remark #15389: vectorization support: reference a has unaligned access   [ TestVector.cpp(23,5) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 4
   remark #15399: vectorization support: unroll factor set to 2
   remark #15309: vectorization support: normalized vectorization overhead 0.417
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15450: unmasked unaligned unit stride loads: 5 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 28 
   remark #15477: vector loop cost: 4.500 
   remark #15478: estimated potential speedup: 6.200 
   remark #15488: --- end vector loop cost summary ---
   remark #25015: Estimate of max trip count of loop=125
LOOP END

LOOP BEGIN at TestVector.cpp(22,3)
<Remainder loop for vectorization>
   remark #15388: vectorization support: reference X has aligned access   [ TestVector.cpp(23,5) ]
   remark #15388: vectorization support: reference X has aligned access   [ TestVector.cpp(23,5) ]
   remark #15389: vectorization support: reference a has unaligned access   [ TestVector.cpp(23,5) ]
   remark #15389: vectorization support: reference a has unaligned access   [ TestVector.cpp(23,5) ]
   remark #15389: vectorization support: reference a has unaligned access   [ TestVector.cpp(23,5) ]
   remark #15389: vectorization support: reference a has unaligned access   [ TestVector.cpp(23,5) ]
   remark #15389: vectorization support: reference a has unaligned access   [ TestVector.cpp(23,5) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 4
   remark #15309: vectorization support: normalized vectorization overhead 0.781
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #25015: Estimate of max trip count of loop=250
LOOP END

LOOP BEGIN at TestVector.cpp(22,3)
<Remainder loop for vectorization>
   remark #25015: Estimate of max trip count of loop=1000
LOOP END

LOOP BEGIN at TestVector.cpp(26,3)
   remark #15388: vectorization support: reference X2 has aligned access   [ TestVector.cpp(27,5) ]
   remark #15388: vectorization support: reference X2 has aligned access   [ TestVector.cpp(27,5) ]
   remark #15388: vectorization support: reference X has aligned access   [ TestVector.cpp(27,5) ]
   remark #15389: vectorization support: reference a has unaligned access   [ TestVector.cpp(27,5) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 4
   remark #15399: vectorization support: unroll factor set to 4
   remark #15309: vectorization support: normalized vectorization overhead 0.083
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 2 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 10 
   remark #15477: vector loop cost: 2.250 
   remark #15478: estimated potential speedup: 4.310 
   remark #15488: --- end vector loop cost summary ---
   remark #25015: Estimate of max trip count of loop=62
LOOP END

LOOP BEGIN at TestVector.cpp(26,3)
<Remainder loop for vectorization>
   remark #15388: vectorization support: reference X2 has aligned access   [ TestVector.cpp(27,5) ]
   remark #15388: vectorization support: reference X2 has aligned access   [ TestVector.cpp(27,5) ]
   remark #15388: vectorization support: reference X has aligned access   [ TestVector.cpp(27,5) ]
   remark #15389: vectorization support: reference a has unaligned access   [ TestVector.cpp(27,5) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 4
   remark #15309: vectorization support: normalized vectorization overhead 0.765
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #25015: Estimate of max trip count of loop=250
LOOP END

LOOP BEGIN at TestVector.cpp(26,3)
<Remainder loop for vectorization>
   remark #25015: Estimate of max trip count of loop=1000
LOOP END
===========================================================================

Begin optimization report for: __sti__$E()

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (__sti__$E()) [3/3=100.0%] <compiler generated>
  -> EXTERN: /usr/include/c++/4.8.5/iostream:(74,25) __cxa_atexit()
  -> EXTERN: /usr/include/c++/4.8.5/iostream:(74,25) std::ios_base::Init::Init(std::ios_base::Init *)

===========================================================================
